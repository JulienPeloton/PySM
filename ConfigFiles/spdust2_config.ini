[General]
#Template for the spinningdust
thermaldust_polq = ./Ancillaries/ThermalDust/mbb/COM_CompMap_DustPol-commander_512_R2.00_q.fits
thermaldust_polu = ./Ancillaries/ThermalDust/mbb/COM_CompMap_DustPol-commander_512_R2.00_u.fits

#Polarization fraction of the spinningdust. This is different to the nominal
#model1 which has polarization of zero.
pol_frac = 0.02

[SpinningDust1]
#Sectral behaviou, currently two component spinning dust population with 
#emissivity computed numerically with the SpDust2 code (Ali-Haimoud 2008, 
#http://arxiv.org/abs/0812.2904)
spectral_model = spdustnum

#Reference frequency (GHz) for population 1 template in I and P.
freq_ref = 22.8
#Population 1 intensity template.
em_template = ./Ancillaries/SpinningDust/COM_CompMap_AME-commander_512_R2_I1.00.fits
#Peak frequency for population 1. This is a parameter required by the 
#Commander model for AME.
freq_peak = ./Ancillaries/SpinningDust/COM_CompMap_AME-commander_512_R2_nu_peak.00.fits
#This is a parameter fixed by the Commander model.
peak_ref = 30.0
#Input units of templates. Must be in form of prefix [n, u, m, k, M, G] and unit type [K_RJ, 
#K_CMB, MJysr], e.g. uK_RJ, MJysr, K_CMB
template_units = uK_RJ
#Emissivity computed using SpDust2. The columns are frequency (GHz) and emissivity per
#hydrogen atom.
emissivity = ./Ancillaries/SpinningDust/emissivity.npy

[SpinningDust2]
#These parameters have the same meaning as above, but for the second spinning dust population.

spectral_model = spdustnum
freq_ref = 41.0
em_template = ./Ancillaries/SpinningDust/COM_CompMap_AME-commander_512_R2_I2.00.fits
#The Commander model fixes the peak frequency (GHz) of the second population at this value.
freq_peak = 33.35
peak_ref = 30.0
template_units = uK_RJ
emissivity = ./Ancillaries/SpinningDust/emissivity.npy
