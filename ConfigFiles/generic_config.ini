[GlobalParameters]
output_frequency = 23. 44. 70. 100. 143. 217. 353. 545. 857.
nside = 256
output_units = uK_RJ
output_dir = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Output/
input_dirr = /mnt/users/groups/act/bthorne

[Bandpass]
bandpass_model = tophat
width = 5.
samples = 10.
weights_file = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/weights_file.txt
bandpass = True

[ThermalDust]
model = dust1
#The following parameters will only be read if model = custom. Otherwise, these parameters
#will be read from "./ConfigFiles/<model>_config.ini"
#Spectral behaviour. Currently only modified black-body supported ("thermaldust")
spectral_model = thermaldust
#Thermal dust emission templates in intensity and polarization at the reference frequencies
em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/ThermalDust/mbb/smoothed_dust_em.fits
polq_em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/ThermalDust/mbb/smoothed_dust_polq_em.fits
polu_em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/ThermalDust/mbb/smoothed_dust_polu_em.fits
#Input units of the templates above (available options are uK_RJ, uK_CMB and MJysr
template_units = uK_RJ
#Reference frequencies in intensity and polarization
freq_ref = 545.
pol_freq_ref = 353.
#Modified black-body temperature across the sky (needed if spectral_model = thermaldust)
temp_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/ThermalDust/mbb/smoothed_dust_temp.fits
#Spectral index across the sky (needed if spectral_model = thermaldust)
beta_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/ThermalDust/mbb/smoothed_dust_beta.fits

[Synchrotron]
model = synchrotron1
#The following parameters will only be read if model = custom. Otherwise, these parameters
#will be read from "./ConfigFiles/<model>_config.ini"
#Spectral behaviour. Currently only power law ("powerlaw") and curved power law ("curvedpowerlaw") supported
spectral_model = curvedpowerlaw
#Synchrotron emission templates in intensity and polarization at the reference frequencies
em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/Synchrotron/mamd2008/smoothed_synch_em.fits
polq_em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/Synchrotron/mamd2008/smoothed_synch_polq_em.fits
polu_em_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/Synchrotron/mamd2008/smoothed_synch_polu_em.fits
#Input units of the templates above (available options are uK_RJ, uK_CMB and MJysr
template_units = MJysr
#Reference frequencies in intensity and polarization
freq_ref = 23.
pol_freq_ref = 23.
#Reference frequency for curvature
curvefreq = 23.
#Spectral index across the sky (needed if spectral_model = powerlaw or curvedpowerlaw)
beta_template = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/Synchrotron/mamd2008/smoothed_synch_beta.fits
#Curvature index, assumed homogeneous (needed if spectral_model = curvedpowerlaw)
beta_curve = -0.3

[CMB]
input_spectra = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/CMB/taylens/camb_lenspotentialCls.dat
compute_lensed_cmb = True
lensed_cmb = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Ancillaries/CMB/taylens/lensed_cmb.fits
order = 3
output_dir = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Output/

[Noise]
output_dir = /mnt/users/groups/act/bthorne/PySM/PySM-2.0/Output/
