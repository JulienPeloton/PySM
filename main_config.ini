[GlobalParameters]
#Options for components are: synchrotron, thermaldust, and cmb. Do not use commas to separate components and do not use quotes, e.g.: components = synchrotron thermaldust
#These components should also be enumerated in the corresponding sections below (ThermalDust, Synchrotron, CMB).
components = synchrotron 
#Desired frequency of output maps in GHz. Must have same number of output frequencies as bandpass widths. Do not separate with commas of use quotes, e.g. output_frequency = 23. 44. 100.
output_frequency = 23. 40. 100.
#Calculate the maps given a bandpass of width bandpass_widths centered at each output_frequency, True or False.
bandpass = False
#Widths of the bandpasses in GHz. Only used if bandpass = True. Must have the same number of bandpass widths as output frequencies.
bandpass_widths = 5. 5. 5. 5. 5. 5. 5. 5. 5.
#The nside of the output maps.
nside = 256
#Units of output map. Must be in the format of a prefix: n, u, m, k, M, G.  And a unit type: K_RJ, K_CMB, MJysr. Note that if the output is to be in just K_CMB you would type: output_units = K_CMB, or for mega Janskys output_units = MJysr.
output_units = mK_RJ
#Option to run pysm in verbose mode, and write maps of individual components, as well as total maps, to the output directory.
debug = False

#Output files are written as:  <output_dir>/<output_prefix>_<component1>_<component2>_<component3>_<frequency>_<nside>.fits

#Directory in which all outputs will be written. NOTE: the trailing '/' is required.
output_dir = ./Output/
#Prefix for the output files.
output_prefix = prun_


#Each component is described in a separate configuration file as detailed below. Example configuration files for each component can be found in the directory ConfigFiles
[ThermalDust]
#PySM will read the model parameters from "./ConfigFiles/<model>_config.ini". The nominal model, and only current model, is to use a single-component modified black body.
model = dust1

[Synchrotron]
#PySM will read the model parameters from "./ConfigFiles/<model>_config.ini". The nominal model uses just a powerlaw with a spatially varying spectral index. Other provided option is to use a power law with curvature.
model = synchrotron2

[CMB]
#PySM will read the model parameters from "./ConfigFiles/<model>_config.ini". The default model reads in a cmb map that has been calculated previously using taylens (Naess, S. K. and Louis, T. Journal of Cosmology and Astroparticle Physics September 2013). Other option (cmb2) is to provide Cls and compute a new lensed cmb realisaion.
model = cmb1

#Will soon be adding free-free and spinning dust components as well as adding small scale noise.
