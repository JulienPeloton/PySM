[GlobalParameters]
#Current options are: synchrotron, thermaldust, and cmb. Do not use commas or quotes.
#These components should each be assigned a model choice below 
components = cmb

#Output frequency in GHz. Must match number of bandpass widths. No commas or quotes.
output_frequency =  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99


#Integrate over tophat bandpass of width bandpass_widths centered at output_frequency, True or False.
bandpass = False

#Widths of the bandpasses in GHz. Only used if bandpass = True. Must have the same number of bandpass widths as output frequencies.
bandpass_widths = 5. 5. 5. 5. 5. 5. 5. 

#The nside of the output maps [currently only 256]
nside = 256

#Units of output map. Must use prefix [n, u, m, k, M, G], and a unit type [K_RJ, K_CMB, MJysr]. E.g., for K_CMB use output_units=K_CMB, or for mega Janskys output_units=MJysr.
output_units = uK_RJ

#Option to run pysm in verbose mode, and write maps of components as well as total maps.
debug = False


#Output files written as:  <output_dir>/<output_prefix>_<comp1>_<comp2>_<comp3>_<freq>_<nside>.fits

#Directory in which all outputs will be written. NOTE: the trailing '/' is required.
output_dir = ./Output/
#Optional prefix for the output files.
output_prefix = test_


#Each component is described in its own config file. Files are in /ConfigFiles/<model>_config.ini. The code will look there.

[ThermalDust]
#Nominal model is dust1, a single-component modified black body with spatially varying emissivity.
model = dust1

[Synchrotron]
#PySM will read the model parameters from "./ConfigFiles/<model>_config.ini". The nominal model uses a power-law with a spatially varying spectral index. 
#Other provided option is to use a power law with curvature.
model = synchrotron1


[CMB]
#Default model cmb1 reads in a CMB map that has been calculated using Taylens (Naess & Louis, astro-ph/1307.0719). 
#You can also provide Cls and compute a new lensed CMB realisation.
model = cmb1

#Will add free-free, anomalous dust, instrument noise, and small-scale signal

